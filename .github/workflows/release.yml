name: release
on:
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: pnpm cache
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - name: install pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: 6.30.1
      - name: setup node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: 17
      - name: setup python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.2'
          cache: 'pip'
      - name: install dependencies
        run: |
          pip3 install --upgrade pip
          pip3 install -r requirements.txt
          pnpm install
      - name: typecheck
        run: pnpm run typecheck
      - name: test
        run: pnpm run test
      - name: build
        run: |
          pnpm run build
          docker build -t ${{ github.repository }}:latest .
      - name: ghcr.io login
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: dockerhub login
        if: ${{ github.event_name == 'push' }}
        env:
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u escpc --password-stdin
      - name: release
        if: ${{ github.event_name == 'push' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm exec semantic-release
