name: release
on:
  schedule:
    - cron: '10 16 * * 2'
  repository_dispatch:
    types: [release]
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 16
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: node cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: pip cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: install dependencies
        run: |
          pip3 install -r requirements.txt
          npm ci
          cd example && npm ci
      - name: typecheck
        run: npm run typecheck
      - name: test
        run: npm run test
      - name: build
        run: |
          npm run build
          docker build -t ${{ github.repository }}:latest .
          cd example
          npm run web-fonts
          npm run typecheck
          npm run build
      - name: docker login
        env:
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          CONTAINER_REGISTRY_TOKEN: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
        run: |
          echo ${{ secrets.CONTAINER_REGISTRY_TOKEN }} | docker login ghcr.io -u escapace --password-stdin
          echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u escpc --password-stdin
      - name: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: npx semantic-release
